/* tslint:disable */
/* eslint-disable */

/* auto-generated by NAPI-RS */

/** クリップボードから読み取ったデータを保持する構造体 */
export interface ClipboardContent {
  /** ファイルパスのリスト。ファイルパスがない場合は空の配列。 */
  filePaths: Array<string>
  /** テキスト内容。テキストがない場合はnull。 */
  text?: string
}
/** Hello World関数 - 動作確認用 */
export declare function helloWorld(): string
/**
 * Copies the given list of file paths to the OS clipboard.
 *
 * # Arguments
 * * `paths` - A list of absolute or relative file paths to copy.
 *   - The paths will be registered to the clipboard in the appropriate format for each OS.
 *   - Passing an empty list will result in an error.
 *
 * # Returns
 * * Returns `Ok(())` if the operation succeeds.
 * * Returns `Err(napi::Error)` if an error occurs.
 *
 * # Note
 * * This function will actually change the contents of the system clipboard.
 * * Please be careful when running tests.
 */
export declare function writeClipboardFilePaths(paths: Array<string>): void
/**
 * Reads raw binary data from the OS clipboard.
 *
 * # Returns
 * * Returns `Ok(Vec<u8>)` with the clipboard raw content if successful.
 * * Returns `Err(napi::Error)` if an error occurs.
 *
 * # Note
 * * This function reads the current raw contents of the system clipboard.
 * * The format of the data depends on what application wrote to the clipboard.
 */
export declare function readClipboardRaw(): Array<number>
/**
 * Reads content from the OS clipboard, trying to extract both file paths and text.
 *
 * # Returns
 * * Returns `Ok(ClipboardContent)` with the clipboard content if successful.
 * * If clipboard is empty, returns an object with empty file_paths and null text.
 *
 * # Note
 * * This function attempts to read both file paths and text from the clipboard.
 * * It's possible for both, either, or neither type of data to be present.
 */
export declare function readClipboardContent(): ClipboardContent
