name: 'JavaScript„Ç≥„Éº„Éâ„ÅÆLint'
description: 'Lint„ÄÅFormat„ÉÅ„Çß„ÉÉ„ÇØ'

inputs:
  node-version:
    description: 'Node.js„ÅÆ„Éê„Éº„Ç∏„Éß„É≥ (Á©∫„ÅÆÂ†¥Âêà„ÅØ.node-version„Çí‰ΩøÁî®)'
    required: false
    default: ''
  lint-command:
    description: 'Lint„ÇíÂÆüË°å„Åô„Çã„Ç≥„Éû„É≥„Éâ'
    required: false
    default: 'nr ci'
  working-directory:
    description: '‰ΩúÊ•≠„Éá„Ç£„É¨„ÇØ„Éà„É™'
    required: false
    default: '.'
  check-uncommitted:
    description: 'Êú™„Ç≥„Éü„ÉÉ„Éà„ÅÆÂ§âÊõ¥„Çí„ÉÅ„Çß„ÉÉ„ÇØ„Åô„Çã„Åã„Å©„ÅÜ„Åã'
    required: false
    default: 'true'

runs:
  using: "composite"
  steps:
    - name: ÂÆüË°åÊÉÖÂ†±„ÅÆÂàùÊúüÂåñ
      shell: bash
      run: |
        echo "ACTION_SUMMARY=[]" >> $GITHUB_ENV
        echo "LINT_RESULTS=[]" >> $GITHUB_ENV

    - name: Node.jsË®≠ÂÆö
      uses: ./.github/actions/node-setup
      with:
        node-version: ${{ inputs.node-version }}
        registry-url: 'https://registry.npmjs.org'
        package-path: ${{ inputs.working-directory }}
    
    - name: add antfu/ni
      shell: bash
      run: |
        npm i -g @antfu/ni
        echo "ACTION_SUMMARY=$(echo $ACTION_SUMMARY | jq -c '. += ["@antfu/ni „ÉÑ„Éº„É´„Çí„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åó„Åü"]')" >> $GITHUB_ENV
    
    - name: Install dependencies
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        nci
        echo "ACTION_SUMMARY=$(echo $ACTION_SUMMARY | jq -c '. += ["„Éë„ÉÉ„Ç±„Éº„Ç∏‰æùÂ≠òÈñ¢‰øÇ„Çí '${{ inputs.working-directory }}' „Å´„Ç§„É≥„Çπ„Éà„Éº„É´„Åó„Åæ„Åó„Åü"]')" >> $GITHUB_ENV

    - name: Lint
      shell: bash
      working-directory: ${{ inputs.working-directory }}
      run: |
        set +e
        ${{ inputs.lint-command }} > /tmp/lint_output.txt 2>&1
        LINT_EXIT_CODE=$?
        set -e
        
        if [ $LINT_EXIT_CODE -eq 0 ]; then
          echo "LINT_RESULTS=$(echo $LINT_RESULTS | jq -c '. += ["‚úÖ Lint„ÉÅ„Çß„ÉÉ„ÇØ„Å´ÊàêÂäü„Åó„Åæ„Åó„Åü"]')" >> $GITHUB_ENV
        else
          LINT_ERROR=$(cat /tmp/lint_output.txt | tail -n 20)
          echo "LINT_RESULTS=$(echo $LINT_RESULTS | jq -c '. += ["‚ùå Lint„ÉÅ„Çß„ÉÉ„ÇØ„Å´Â§±Êïó„Åó„Åæ„Åó„Åü"]')" >> $GITHUB_ENV
          echo "LINT_ERROR<<EOF" >> $GITHUB_ENV
          echo "$LINT_ERROR" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
        fi
        
        echo "ACTION_SUMMARY=$(echo $ACTION_SUMMARY | jq -c '. += ["'${{ inputs.working-directory }}' „ÅßLint„ÇíÂÆüË°å„Åó„Åæ„Åó„Åü"]')" >> $GITHUB_ENV
        
        # ÂÖÉ„ÅÆ„Ç≥„Éû„É≥„Éâ„ÅÆexit„Ç≥„Éº„Éâ„ÇíËøî„Åô
        exit $LINT_EXIT_CODE

    - name: Check for uncommitted changes
      if: inputs.check-uncommitted == 'true'
      shell: bash
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          UNCOMMITTED=$(git status --porcelain)
          echo "UNCOMMITTED_CHANGES<<EOF" >> $GITHUB_ENV
          echo "$UNCOMMITTED" >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV
          echo "LINT_RESULTS=$(echo $LINT_RESULTS | jq -c '. += ["‚ö†Ô∏è Êú™„Ç≥„Éü„ÉÉ„Éà„ÅÆÂ§âÊõ¥„Åå„ÅÇ„Çä„Åæ„Åô"]')" >> $GITHUB_ENV
          echo "ACTION_SUMMARY=$(echo $ACTION_SUMMARY | jq -c '. += ["Êú™„Ç≥„Éü„ÉÉ„Éà„ÅÆÂ§âÊõ¥„ÇíÊ§úÂá∫„Åó„Åæ„Åó„Åü"]')" >> $GITHUB_ENV
          
          echo "Êú™„Ç≥„Éü„ÉÉ„Éà„ÅÆÂ§âÊõ¥„Åå„ÅÇ„Çä„Åæ„Åô„ÄÇ„Åæ„Åö‰ª•‰∏ã„ÅÆÂ§âÊõ¥„Çí„Ç≥„Éü„ÉÉ„Éà„Åó„Å¶„Åè„Å†„Åï„ÅÑÔºö"
          git status --porcelain
          exit 1
        else
          echo "LINT_RESULTS=$(echo $LINT_RESULTS | jq -c '. += ["‚úÖ Êú™„Ç≥„Éü„ÉÉ„Éà„ÅÆÂ§âÊõ¥„ÅØ„ÅÇ„Çä„Åæ„Åõ„Çì"]')" >> $GITHUB_ENV
          echo "ACTION_SUMMARY=$(echo $ACTION_SUMMARY | jq -c '. += ["Êú™„Ç≥„Éü„ÉÉ„ÉàÂ§âÊõ¥„ÅÆ„ÉÅ„Çß„ÉÉ„ÇØ„ÇíÂÆüÊñΩ„Åó„Åæ„Åó„Åü (ÂïèÈ°å„Å™„Åó)"]')" >> $GITHUB_ENV
        fi
    
    - name: „Çµ„Éû„É™„ÉºÂá∫Âäõ
      if: always()
      shell: bash
      run: |
        echo "## üîç JavaScript„Ç≥„Éº„Éâ„ÅÆLint „Çµ„Éû„É™„Éº" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### üìä ÂÆüË°åÊÉÖÂ†±" >> $GITHUB_STEP_SUMMARY
        echo "- **Node.js„Éê„Éº„Ç∏„Éß„É≥:** ${{ inputs.node-version == '' && '.node-version„Éï„Ç°„Ç§„É´„Åã„Çâ' || inputs.node-version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Lint„Ç≥„Éû„É≥„Éâ:** \`${{ inputs.lint-command }}\`" >> $GITHUB_STEP_SUMMARY
        echo "- **‰ΩúÊ•≠„Éá„Ç£„É¨„ÇØ„Éà„É™:** ${{ inputs.working-directory }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Êú™„Ç≥„Éü„ÉÉ„ÉàÂ§âÊõ¥„ÉÅ„Çß„ÉÉ„ÇØ:** ${{ inputs.check-uncommitted }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### üîß ÂÆüË°å„Åó„Åü„Ç¢„ÇØ„Ç∑„Éß„É≥" >> $GITHUB_STEP_SUMMARY
        for action in $(echo $ACTION_SUMMARY | jq -r '.[]'); do
          echo "- $action" >> $GITHUB_STEP_SUMMARY
        done
        echo "" >> $GITHUB_STEP_SUMMARY
        
        echo "### üìù LintÁµêÊûú" >> $GITHUB_STEP_SUMMARY
        for result in $(echo $LINT_RESULTS | jq -r '.[]'); do
          echo "- $result" >> $GITHUB_STEP_SUMMARY
        done
        
        if [[ -n "${LINT_ERROR:-}" ]]; then
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### Lint„Ç®„É©„ÉºË©≥Á¥∞" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "$LINT_ERROR" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi
        
        if [[ -n "${UNCOMMITTED_CHANGES:-}" ]]; then
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "#### Êú™„Ç≥„Éü„ÉÉ„Éà„ÅÆÂ§âÊõ¥" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          echo "$UNCOMMITTED_CHANGES" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
        fi 