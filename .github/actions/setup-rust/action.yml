name: 'Rustセットアップ'
description: 'Rustツールチェーンとその依存関係のセットアップ'

inputs:
  toolchain:
    description: 'Rustのツールチェーン'
    required: false
    default: 'stable'
  components:
    description: 'インストールするコンポーネント'
    required: false
    default: 'rustfmt clippy'
  cache-key:
    description: 'キャッシュのキー'
    required: false
    default: 'rust-setup'
  install-dependencies:
    description: 'Linux依存関係をインストールするかどうか'
    required: false
    default: 'true'
  just-version:
    description: 'Justのバージョン'
    required: false
    default: '1.23.0'

runs:
  using: "composite"
  steps:
    # 必要なツールをインストール
    - name: 依存ツールインストール
      shell: bash
      run: |
        apt-get update -y
        apt-get install -y curl wget

    # justを直接インストール
    - name: Justインストール
      shell: bash
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://just.systems/install.sh | bash -s -- --to /usr/local/bin

    # rustupを使用
    - name: Setup Rust
      shell: bash
      run: |
        curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal --default-toolchain ${{ inputs.toolchain }}
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        source "$HOME/.cargo/env"
        components="${{ inputs.components }}"
        # コンポーネントごとに個別にインストール
        for component in $components; do
          rustup component add $component
        done
        
    - name: Linux依存関係をインストール
      if: runner.os == 'Linux' && inputs.install-dependencies == 'true'
      shell: bash
      run: |
        # sudoを使わずに直接apt-getを実行
        sudo apt-get update -y
        sudo apt-get install -y libx11-dev libxext-dev libxrender-dev libxtst-dev libxinerama-dev libxss-dev

    # Swatinem/rust-cacheは一時的に無効化
    # - name: Cache Rust dependencies
    #   uses: Swatinem/rust-cache@v2
    #   with:
    #     key: ${{ inputs.cache-key }} 