name: Version Bump

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'バージョン更新タイプ (patch, minor, major)'
        required: true
        default: 'patch'
        type: choice
        options:
          - patch
          - minor
          - major

jobs:
  check-changes:
    runs-on: ubuntu-latest
    outputs:
      has_changes: ${{ steps.check.outputs.has_changes }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Check for uncommitted changes
        id: check
        run: |
          if [[ -n $(git status --porcelain) ]]; then
            echo "未コミットの変更があります。まずコミットしてください。"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

  bump-version:
    needs: check-changes
    if: needs.check-changes.outputs.has_changes == 'false'
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version-file: '.node-version'

      - name: Install dependencies
        run: npm ci

      - name: Get current version
        id: current_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Bump version in package.json
        run: npm version ${{ github.event.inputs.version }} --no-git-tag-version

      - name: Get new version
        id: new_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Generate CHANGELOG
        uses: ./.github/actions/generate-changelog
        with:
          version: ${{ steps.new_version.outputs.version }}
          commit-changes: 'false'

      - name: Commit changes
        run: |
          git add package.json package-lock.json CHANGELOG.md
          git commit -m "chore: Bump version to v${{ steps.new_version.outputs.version }}"
          git tag -a v${{ steps.new_version.outputs.version }} -m "Release v${{ steps.new_version.outputs.version }}"
          git push
          git push --tags 